// All button and some link styles
.btn {
  -webkit-appearance: none;
     -moz-appearance: none;
      -ms-appearance: none;
       -o-appearance: none;
          appearance: none;
  background: transparent;
  border: none;
  cursor: pointer;
  display: inline-block;
  font-family: $body-typeface-semibold;
  letter-spacing: $button-spacing;
  line-height: 1.5;
  min-height: unset;
  // Note that padding is not reset here as it is declaired elsewhere
  text-align: center; // This is required for three button styles which have min-width
  text-decoration: none;
  text-transform: uppercase;
  vertical-align: top;
  width: auto;
}

// Primary, secondary and config buttons have some styles in common
// Note that the margin bottom leads to a doubling of the gutters at the bottom of the paragraph
// so should be used within a .flush class.
.btn-primary, .btn-secondary, .btn-config {
  font-size: 14px;
  border-radius: $radius-medium;
  letter-spacing: .15em;
  margin: 0 50px 25px 0;

  // This allows buttons to stack, but the following pattern:
  // <a class="btn">Button</a> some text
  // ... will leave "some text" too close to the button.
  // This pattern will leave the margin in place:
  // <a class="btn">Button</a> <span>some text</span>
  &:last-child {margin-right: 0;}
}
.btn-primary, .btn-secondary {
  min-width: 200px;
  padding: 1em 2.1em;
  
    // Small variant for primary and secondary buttons
    // Used in the main navigation
    &.btn-sm {
      min-width: 190px;
      padding-bottom: .72em;
      padding-top: .72em;
    }
}

@include media-breakpoint-down(sm) {
  // Not sure how wide to make this rule. .btn seems too wide.
  .btn-primary, .btn-secondary {
    display: block;
    margin-right: 0;
    min-width: 0;
    padding-left: .5em;
    padding-right: .5em;
  }
}

//////////////////////////////////////////////
// White text on a blue gradient background.
// Probably should only be used once per-page.
//////////////////////////////////////////////
.btn.btn-primary {
  background: $grad-mid-blue;
  border: solid 1px $colour-off-white;
  color: $colour-off-white;

  &:hover, &:focus {
      background: $colour-dark-blue;
      color: $colour-off-white;
  }

  &:before {border: none;}
}

//////////////////////////////////////////
// Gradient background on just the border
// The .btn class is used to up the
// inheritance, so that the chosen colours
// remain inside coloured backgrounds.
//////////////////////////////////////////
.btn {
  &.btn-secondary, &.btn-icon {
    background: $colour-off-white;
    background-clip: padding-box;
    border: solid $border-default transparent;
    color: $colour-dark-blue;
    position: relative;

    &:before {
      background: $grad-mid-blue;
      border-radius: $radius-medium;
      bottom: 0;
      content: "";
      left: 0;
      margin: -$border-default;
      position: absolute;
      right: 0;
      top: 0;
      z-index: -1;
    }

    &:hover, &:focus {
        background: $colour-light-grey;
        background-clip: padding-box;
    }
  }
}
// Fallback styles for "empty" tags
input.btn.btn-secondary {
  border: solid $border-default $colour-mid-blue;
}

////////////////////////////////////////////////////////////
// Buttons which allows the user to configure their account,
// for example accessing the cart or viewing their details.
////////////////////////////////////////////////////////////
.btn-config {
  border: solid 1px $colour-dark-blue;
  padding: .72em;

  &:before {border: none;}
  // For example the user icon
  svg {
    height: 1.2em;
    fill: $colour-dark-blue;
  }
}

////////////////////////////////////////////////////////////
// Designed to sit against coloured backgrounds and suchlike
////////////////////////////////////////////////////////////
.btn-arrow {
  color: $colour-dark-blue;
  font-family: $body-typeface-bold;
  font-size: 16px;
  padding: 0 1.5em 0 0;
  position: relative;
  text-align: left;
  transition: all .2s;

  &:hover, &:focus {
    color: $colour-bright-blue;
    padding-right: 2em;
  }
  
  // This makes up the ➜, plus there's an inheritance
  // squabble with the default anchor underline behaviour
  &:before, &:after {
    border: none;
    bottom: unset;
    left: unset;
    position: absolute;
    right: 0;
    // When the button wraps (on mobile, for example) the
    // arrow needs to align with the bottom line of text.
    bottom: 0;
    transition: all .2s;
  }
  // Is this a terrible idea?
  &:after {
    content: "➜";
    height: 1.6em;
    line-height: 1.6em;
  }
  // The extending stalk of the arrow above
  // This rule is full of magic numbers, which
  // suggests it won't pass browser testing.
  &:before {
    border-top: solid .15em $colour-dark-blue;
    content: "";
    height: .8em;
    right: .2em;
    width: .7em;
  }
  // Pushes out the tail of the ➜
  &:hover:before, &:focus:before {
    border-color: $colour-bright-blue;
    // Needed, although it doesn't look like it
    right: .2em;
    width: 1.2em;
  }

  // Small varient, used inside tooltips
  // Lord forgive me for these magic numbers
  &.btn-sm {
    font-size: 12px;
    padding: 0 1.8em 0 0;

    // That arrow is still nice and chunky though
    // (which causes everything to be recalculated)
    &::before, &::after {
      font-size: $font-size-body;
    }

    &::before {
      height: $font-size-body / 1.8;
    }
    
    &::after {
      height: $font-size-body;
      line-height: $font-size-body;
    }
    &:hover, &:focus {
      padding-right: 2.6em;
    }
  }
}

///////////////
// Pill buttons
///////////////
%pill-inactive {
  background: $colour-off-white;
  color: $colour-dark-blue;
}
.btn-pill, .toggle:checked + .btn-pill {
  background: $colour-dark-blue;
  border: solid 1px $colour-dark-blue;
  border-radius: 2em;
  color: $colour-off-white;

}
.btn-pill {
  font-size: 14px;
  margin: 0 35px 17px 0; // Second value is ~half the first
  // Did not survive contact with actual page layouts
  // min-width: 160px;
  padding: .43em 1em;
  
  &:before {border: none;}
  &:hover, &:focus, &.off {
    @extend %pill-inactive;
  }
}

// For when pills are used to style checkbox toggles
label.btn-pill, label.btn-pill-sm {
  @extend %pill-inactive;
}
.btn-pill.btn-sm {
  font-size: 12px;
  margin: 0 8px 4px 0; // Second value is ~half the first
  min-width: 1em;
  // Annoying
  padding: .21em .6em;
}

///////////////
// Icon buttons
///////////////
.btn.btn-icon {
  $size: 40px;
  border-radius: 50%;
  height: $size;
  line-height: $size;
  padding: 0;
  margin-right: 10px;
  width: $size;
  &:before {border-radius: 50%;}
  // Because vertical-align wasn't being parsed on <button> tags,
  // I've used this apprach to position the <span> tags inside the
  // buttons because it works best across all three tags. Might need
  // to revisit this, if the icons are inline SVGs.
  & > * {transform: translate(0,-($size/8));}
  // Note that in this use case:
  // Text (btn-icon) text
  // The second "text" would be too close to the button, due to the
  // below rule.
  &:last-child {margin-right: 0;}
}

///////////////////////////////////////////////////
// Navigation buttons
// Used in the main navigation
// Should be the same height as .btn-primary.btn-sm
///////////////////////////////////////////////////
.btn-nav {
  border: solid 1px transparent; // Superstitious
  font-family: $body-typeface-semibold;
  font-size: 12px;
  padding: .97em 2em;
}

//////////////////////////////////////////////
// Used in the email signup form in the footer
//////////////////////////////////////////////
.btn-clear {
  background: transparent;
  color: inherit;
  padding: 0;

  // This can also be used to remove the default link styling,
  // which has the underline on hover effect.
  &::before {
    display: none;
  }
}