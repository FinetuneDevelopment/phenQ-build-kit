// I guess really small modules?

// Using arbitrary typefaces
.type-gotham-light           {font-family: $heading-typeface-light;}
.type-gotham-medium          {font-family: $heading-typeface-medium;}
.type-gotham-bold            {font-family: $heading-typeface-bold;}

.type-source-light           {font-family: $body-typeface;}
.type-source-light-italic    {font-family: $body-typeface-light-italic;}
.type-source-regular         {font-family: $body-typeface-regular;}
.type-source-italic          {font-family: $body-typeface-italic;}
.type-source-semibold        {font-family: $body-typeface-semibold;}
.type-source-semibold-italic {font-family: $body-typeface-semibold-italic;}
.type-source-bold            {font-family: $body-typeface-bold;}
.type-source-bold-italic     {font-family: $body-typeface-bold-italic;}

// This adds borders between bootstrap columns
.border-between {
    & > [class*='col-']:before, & > [class*='col-']:after {
        // The design specifies #979797, but for consistancy...
        background: $colour-grey;
        bottom: 0;
        content: "";
        position: absolute;
        top: 0;
        width: 1px;
    }
    & > [class*='col-']:before {
        left: -1px;
    }
    & > [class*='col-']:after {
        right: 0;
    }
    & > [class*='col-']:first-child:before,
    & > [class*='col-']:last-child:after {
        display: none;
    }
}

// Standard 
.cta-box {
  // If this is used inside a grid with other .cta-boxes, they'll all be the same size.
  height: calc(100% - #{$gutter});
  margin-bottom: $gutter;
  padding: $gutter;
  
  // For the final block element inside the .cta-box
  // (not the last .cta-box inside a container)
  & > :last-child { margin-bottom: 0; }
}

.radius-big    { border-radius: $radius-big; }
.radius-medium { border-radius: $radius-medium; }
.radius-small  { border-radius: $radius-small; }

// Used in conjunction with the above classes, this makes a shape a bit
// like an upside-down U. You know, â‹‚.
.cap-top {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

// Created in error
//.shadow-light {
//  -webkit-box-shadow: 0 .2em .5em 0 rgba(0,0,0,.1);
//     -moz-box-shadow: 0 .2em .5em 0 rgba(0,0,0,.1);
//          box-shadow: 0 .2em .5em 0 rgba(0,0,0,.1);
//}

.mb-0 {margin-bottom: 0 !important;}

// Adding horizontal gutters between molecules
.gutter-small  {margin-bottom:  50px !important;}
.gutter-medium {margin-bottom: 100px !important;}
.gutter-large  {margin-bottom: 200px !important;}

// Colouring text in arbratory colours
.txt-bright-blue {color: $colour-bright-blue;}
.txt-mid-blue    {color: $colour-mid-blue;}
.txt-dark-blue   {color: $colour-dark-blue;}
.txt-red         {color: $colour-red;}
.txt-green       {color: $colour-green;}
.txt-grey        {color: $colour-grey;}
.txt-dark-grey   {color: $colour-dark-grey;}
.txt-off-white   {color: $colour-off-white;}
.txt-mint        {color: $colour-mint;}
.txt-lemon       {color: $colour-lemon;}
.txt-light-grey  {color: $colour-light-grey;}

// Alignment classes
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }

// This class allows buttons to be put together closer than they usually would,
// for example in a toolbar.
.toolbar .btn {margin-right: 9px;}

// Gives an image a gradient border and makes it a circle
.img-profile {
  background: $grad-light-blue;
  display: inline-block;
  padding: 1px;

  &, img {
    border-radius: 50%;
  }
}

// Say you have a set of icons or buttons and you want to make a quick-and-dirty navbar
.space-between {
  display: flex;
  justify-content: space-between;
}

// Say you have a CTA inside a Bootstrap column and you need it to have a vertical flexbox
// layout, so you can push the button to the bottom (using a .mt-auto class, for example)
// Works on elements which already have the whole height of the row, naturally.
.flex-vert {
  display: flex;
  flex-direction: column;
  // Risky...
  height: 100%;
}
// The height property above causes issues when .flex-vert was added directly onto a Bootstrap
// column.
.flex-vert[class^='col'], .flex-vert[class*=' col'] {
  height: auto;
}

// Sometimes required to snap columns into two (or more) rows
.w-100 { width: 100% !important; }

.sr-only {
  border: 0;
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
// Like the above, but EVIL
.hidden {display: none;}